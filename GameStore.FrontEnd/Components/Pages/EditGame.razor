@page "/editgame"
@page "/editgame/{id:int}"
@inject NavigationManager Navigation
@inject GameClient GamesClient
@inject GenresClient GenresClient
@rendermode InteractiveServer

<PageTitle>@title</PageTitle>

<h3 class="mt-5">@title</h3>
@if (genres is null || game is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@game" FormName="=editGame" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label class="form-label" for="name">Name:</label>
                    <InputText class="form-control" id="name" @bind-Value="game.Name" />
                    <ValidationMessage For="() => game.Name" />
                </div>

                <div class="mb-3">
                    <label class="form-label" for="genre">Genre</label>
                    <InputSelect class="form-select" id="genre" @bind-Value="game.GenreId">

                        <option value="">Select Genre</option>
                        @foreach (var genre in genres)
                        {
                            <option value="@genre.Id">@genre.Name</option>
                        }

                    </InputSelect>
                    <ValidationMessage For="() => game.GenreId" />
                </div>

                <div class="mb-3">
                    <label class="form-label" for="price">Price:</label>
                    <InputNumber class="form-control" id="price" @bind-Value="game.Price" />
                    <ValidationMessage For="() => game.Price" />
                </div>
                <div class="mb-3">
                    <label class="form-label" for="releaseDate">Release Date:</label>
                    <InputDate class="form-control" id="releaseDate" @bind-Value="game.ReleaseDate" />
                    <ValidationMessage For="() => game.ReleaseDate" />
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <a href="/" role="button" class="btn btn-danger">Cancel</a>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromForm]
    // Model to bind the form data
    private GamesDetails? game { get; set; }

    private Genre[]? genres;

    private string title = string.Empty;

    // Load genres on component initialization
    protected override void OnParametersSet()
    {
        if (game is not null)
        {
            return;
        }
        if (Id is not null)
        {
            game = GamesClient.GetGameById(Id.Value);
            title = $"Edit {game.Name}";
        }
        else
        {
            game = new()
            {
                Name = string.Empty,
                ReleaseDate = DateOnly.FromDateTime(DateTime.UtcNow)
            };
            title = "New Game";
        }
    }
    protected override void OnInitialized()
    {
        genres = GenresClient.GetAllGenres();

    }
    // Handle the form submission
    private void HandleSubmit()
    {

        ArgumentNullException.ThrowIfNull(game);

        if(Id is null){

            GamesClient.AddGame(game);
        }
        else{
            game.Id = Id.Value;
            GamesClient.UpdateGame(game);
            
        }

        Navigation.NavigateTo("/");
    }

}